@model AddTaskViewModel
@using synced.Models

<div class="d-flex justify-content-center align-items-center container" style="min-height: 100vh;">
    <div class="modal-dialog d-flex flex-row container" style="max-width: 1000px;">
        <div class="modal-content w-100">
            <div class="modal-header">
                <h5 class="modal-title" id="taskModalLabel">@(Model.Task.Id == 0 ? "Create Task" : "Update Task")</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body d-flex flex-row gap-5">
                <form id="taskForm_@Model.Task.Id" method="post" class="needs-validation w-100" novalidate>
                    <input type="hidden" asp-for="Task.Id" />
                    <input type="hidden" asp-for="Task.Project_id" />
                    <div class="mb-3">
                        <label for="taskTitle_@Model.Task.Id" class="form-label">Title</label>
                        <input type="text" class="form-control" id="taskTitle_@Model.Task.Id" asp-for="Task.Title" required />
                        <div class="invalid-feedback">Please enter a title</div>
                    </div>
                    <div class="mb-3">
                        <label for="taskDescription_@Model.Task.Id" class="form-label">Description</label>
                        <textarea class="form-control" id="taskDescription_@Model.Task.Id" asp-for="Task.Description" required></textarea>
                        <div class="invalid-feedback">Please enter a description</div>
                    </div>

                    <button type="submit" class="btn btn-primary w-100">Save Task</button>
                </form>

                @if (Model.Task.Id > 0)
                {
                    <div class="rounded p-3 border-start w-50" style="min-width: 400px;">
                        <h5>Comments</h5>
                        <div class="comment-list overflow-auto" style="height: 500px;">
                            @foreach (var comment in Model.Comments)
                            {
                                <div class="comment border-bottom pb-2 mb-2">
                                    <strong>@comment.UserName</strong>
                                    <p>@comment.Text</p>
                                    <small class="text-muted">@comment.CreatedAt</small>
                                </div>
                            }
                        </div>

                        <div class="mt-auto">
                            <textarea class="form-control" placeholder="Write a comment..." rows="3"></textarea>
                            <button class="btn btn-primary mt-2 w-100">Add Comment</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
